"use client"

import { useState, useRef } from "react"
import { Button } from "@/components/ui/button"
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogTrigger } from "@/components/ui/dialog"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { useToast } from "@/hooks/use-toast"
import { Upload, X, User, Loader2 } from "lucide-react"
import { cn } from "@/lib/utils"

interface AvatarUploadProps {
  currentAvatar?: string
  initials?: string
  onAvatarChange?: (avatarUrl: string) => void
  size?: "sm" | "md" | "lg"
  className?: string
}

export function AvatarUpload({ 
  currentAvatar, 
  initials, 
  onAvatarChange, 
  size = "md",
  className 
}: AvatarUploadProps) {
  const [isUploading, setIsUploading] = useState(false)
  const [previewUrl, setPreviewUrl] = useState<string | null>(null)
  const [isDialogOpen, setIsDialogOpen] = useState(false)
  const fileInputRef = useRef<HTMLInputElement>(null)
  const { toast } = useToast()

  const sizeClasses = {
    sm: "h-16 w-16",
    md: "h-24 w-24",
    lg: "h-32 w-32"
  }

  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0]
    if (!file) return

    console.log("üìÅ –í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª:", {
      name: file.name,
      type: file.type,
      size: file.size
    })

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
    const allowedTypes = ["image/jpeg", "image/jpg", "image/png", "image/gif", "image/webp"]
    if (!allowedTypes.includes(file.type)) {
      console.error("‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞:", file.type)
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞. –†–∞–∑—Ä–µ—à–µ–Ω—ã —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (JPEG, PNG, GIF, WebP)",
        variant: "destructive",
      })
      return
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ (5MB)
    const maxSize = 5 * 1024 * 1024
    if (file.size > maxSize) {
      console.error("‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π:", file.size)
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 5MB",
        variant: "destructive",
      })
      return
    }

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä
    const reader = new FileReader()
    reader.onload = (e) => {
      setPreviewUrl(e.target?.result as string)
      console.log("‚úÖ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–∑–¥–∞–Ω")
    }
    reader.onerror = (e) => {
      console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:", e)
    }
    reader.readAsDataURL(file)
  }

  const handleUpload = async () => {
    const file = fileInputRef.current?.files?.[0]
    if (!file) {
      console.error("‚ùå –§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω")
      return
    }

    console.log("üöÄ –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:", file.name)
    setIsUploading(true)
    
    const formData = new FormData()
    formData.append("file", file)

    try {
      console.log("üì¶ FormData —Å–æ–∑–¥–∞–Ω")
      console.log("üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞:", {
        method: "POST",
        url: "/api/upload",
        fileType: file.type,
        fileSize: file.size
      })

      const response = await fetch("/api/upload", {
        method: "POST",
        body: formData,
      })

      console.log("üì° –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:", {
        status: response.status,
        statusText: response.statusText,
        ok: response.ok,
        headers: Object.fromEntries(response.headers.entries())
      })

      if (!response.ok) {
        let errorMessage = `HTTP ${response.status}: ${response.statusText}`
        
        try {
          const errorData = await response.json()
          errorMessage = errorData.error || errorMessage
          console.error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:", errorData)
        } catch (parseError) {
          console.error("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞:", parseError)
        }
        
        throw new Error(errorMessage)
      }

      const result = await response.json()
      console.log("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç:", result)
      
      if (onAvatarChange) {
        onAvatarChange(result.url)
      }

      toast({
        title: "–£—Å–ø–µ—à–Ω–æ",
        description: "–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ",
      })

      setIsDialogOpen(false)
      setPreviewUrl(null)
      if (fileInputRef.current) {
        fileInputRef.current.value = ""
      }

    } catch (error) {
      console.error("üí• –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", error)
      
      let errorMessage = "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª"
      if (error instanceof Error) {
        errorMessage = error.message
        
        // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫
        if (error.name === 'AbortError') {
          errorMessage = "–ó–∞–≥—Ä—É–∑–∫–∞ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
        } else if (errorMessage.includes("Failed to fetch")) {
          errorMessage = "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        }
      }
      
      toast({
        title: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏",
        description: errorMessage,
        variant: "destructive",
      })
    } finally {
      setIsUploading(false)
    }
  }

  const handleRemoveAvatar = () => {
    if (onAvatarChange) {
      onAvatarChange("")
    }
    setPreviewUrl(null)
    if (fileInputRef.current) {
      fileInputRef.current.value = ""
    }
    toast({
      title: "–£—Å–ø–µ—à–Ω–æ",
      description: "–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è —É–¥–∞–ª–µ–Ω–æ",
    })
  }

  const displayAvatar = previewUrl || currentAvatar

  return (
    <div className={cn("flex flex-col items-center gap-4", className)}>
      <Avatar className={cn(sizeClasses[size], "cursor-pointer")}>
        <AvatarImage 
          src={displayAvatar} 
          alt="–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è"
          showModal={true}
        />
        <AvatarFallback className="text-lg">
          {initials || <User className="h-6 w-6" />}
        </AvatarFallback>
      </Avatar>

      <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>
        <DialogTrigger asChild>
          <Button variant="outline" size="sm">
            <Upload className="h-4 w-4 mr-2" />
            –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ
          </Button>
        </DialogTrigger>
        <DialogContent className="sm:max-w-md">
          <DialogHeader>
            <DialogTitle>–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è</DialogTitle>
            <DialogDescription>
              –ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã JPEG, PNG, GIF, WebP.
            </DialogDescription>
          </DialogHeader>
          
          <div className="flex flex-col gap-4">
            {/* –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä */}
            {previewUrl && (
              <div className="flex flex-col items-center gap-2">
                <Label>–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä:</Label>
                <Avatar className="h-20 w-20">
                  <AvatarImage src={previewUrl} alt="–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä" />
                  <AvatarFallback>–ü—Ä–µ–≤—å—é</AvatarFallback>
                </Avatar>
              </div>
            )}

            {/* –í—ã–±–æ—Ä —Ñ–∞–π–ª–∞ */}
            <div className="flex flex-col gap-2">
              <Label htmlFor="avatar-upload">–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª:</Label>
              <Input
                id="avatar-upload"
                ref={fileInputRef}
                type="file"
                accept="image/jpeg,image/png,image/gif,image/webp"
                onChange={handleFileSelect}
                disabled={isUploading}
              />
              <p className="text-xs text-muted-foreground">
                –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 5MB. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: JPEG, PNG, GIF, WebP
              </p>
            </div>

            {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
            <div className="flex gap-2">
              <Button
                onClick={handleUpload}
                disabled={!fileInputRef.current?.files?.[0] || isUploading}
                className="flex-1"
              >
                {isUploading ? (
                  <>
                    <Loader2 className="h-4 w-4 mr-2 animate-spin" />
                    –ó–∞–≥—Ä—É–∑–∫–∞...
                  </>
                ) : (
                  <>
                    <Upload className="h-4 w-4 mr-2" />
                    –ó–∞–≥—Ä—É–∑–∏—Ç—å
                  </>
                )}
              </Button>
              
              {currentAvatar && (
                <Button
                  variant="outline"
                  onClick={handleRemoveAvatar}
                  disabled={isUploading}
                >
                  <X className="h-4 w-4 mr-2" />
                  –£–¥–∞–ª–∏—Ç—å
                </Button>
              )}
            </div>
          </div>
        </DialogContent>
      </Dialog>
    </div>
  )
} 