import { NextRequest, NextResponse } from "next/server"
import { writeFile, mkdir } from "fs/promises"
import { join } from "path"
import { v4 as uuidv4 } from "uuid"

export async function OPTIONS() {
  return NextResponse.json({}, {
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'POST, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type',
      'Access-Control-Max-Age': '86400',
    },
  })
}

export async function POST(request: NextRequest) {
  console.log("üöÄ –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞")
  
  try {
    console.log("üì¶ –ü–æ–ª—É—á–µ–Ω–∏–µ FormData...")
    const formData = await request.formData()
    console.log("‚úÖ FormData –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    
    const file = formData.get("file") as File

    if (!file) {
      console.error("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ FormData")
                 return NextResponse.json(
             { error: "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω" },
             { 
               status: 400,
               headers: {
                 'Access-Control-Allow-Origin': '*',
                 'Access-Control-Allow-Methods': 'POST, OPTIONS',
                 'Access-Control-Allow-Headers': 'Content-Type',
                 'Access-Control-Max-Age': '86400',
               },
             }
           )
    }

    console.log("üìã –§–∞–π–ª –ø–æ–ª—É—á–µ–Ω:", {
      name: file.name,
      type: file.type,
      size: file.size,
      lastModified: file.lastModified
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
    const allowedTypes = ["image/jpeg", "image/jpg", "image/png", "image/gif", "image/webp"]
    if (!allowedTypes.includes(file.type)) {
      console.error("‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞:", file.type)
                 return NextResponse.json(
             { error: `–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞: ${file.type}. –†–∞–∑—Ä–µ—à–µ–Ω—ã —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (JPEG, PNG, GIF, WebP)` },
             { 
               status: 400,
               headers: {
                 'Access-Control-Allow-Origin': '*',
                 'Access-Control-Allow-Methods': 'POST, OPTIONS',
                 'Access-Control-Allow-Headers': 'Content-Type',
                 'Access-Control-Max-Age': '86400',
               },
             }
           )
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–º–∞–∫—Å–∏–º—É–º 5MB)
    const maxSize = 5 * 1024 * 1024 // 5MB
    if (file.size > maxSize) {
      console.error("‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π:", file.size, "–±–∞–π—Ç")
                 return NextResponse.json(
             { error: "–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 5MB" },
             { 
               status: 400,
               headers: {
                 'Access-Control-Allow-Origin': '*',
                 'Access-Control-Allow-Methods': 'POST, OPTIONS',
                 'Access-Control-Allow-Headers': 'Content-Type',
                 'Access-Control-Max-Age': '86400',
               },
             }
           )
    }

    // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
    const fileExtension = file.name.split(".").pop()?.toLowerCase() || "jpg"
    const fileName = `${uuidv4()}.${fileExtension}`

    console.log("üìù –°–æ–∑–¥–∞–Ω–æ –∏–º—è —Ñ–∞–π–ª–∞:", fileName)

    // –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    const uploadsDir = join(process.cwd(), "public", "uploads")
    
    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É uploads, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    try {
      await mkdir(uploadsDir, { recursive: true })
      console.log("‚úÖ –ü–∞–ø–∫–∞ uploads —Å–æ–∑–¥–∞–Ω–∞/–ø—Ä–æ–≤–µ—Ä–µ–Ω–∞")
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∞–ø–∫–∏ uploads:", error)
                   return NextResponse.json(
               { error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∞–ø–∫–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏" },
               { 
                 status: 500,
                 headers: {
                   'Access-Control-Allow-Origin': '*',
                   'Access-Control-Allow-Methods': 'POST, OPTIONS',
                   'Access-Control-Allow-Headers': 'Content-Type',
                   'Access-Control-Max-Age': '86400',
                 },
               }
             )
    }

    const filePath = join(uploadsDir, fileName)
    console.log("üìÅ –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:", filePath)

    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª –≤ –±—É—Ñ–µ—Ä –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
    console.log("üîÑ –ù–∞—á–∞–ª–æ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞ –≤ –±—É—Ñ–µ—Ä...")
    
    const bytes = await file.arrayBuffer()
    console.log("‚úÖ –§–∞–π–ª –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ ArrayBuffer, —Ä–∞–∑–º–µ—Ä:", bytes.byteLength, "–±–∞–π—Ç")
    
    const buffer = Buffer.from(bytes)
    console.log("‚úÖ –°–æ–∑–¥–∞–Ω Buffer, —Ä–∞–∑–º–µ—Ä:", buffer.length, "–±–∞–π—Ç")
    
    await writeFile(filePath, buffer)
    console.log("‚úÖ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –Ω–∞ –¥–∏—Å–∫")

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º URL —Ñ–∞–π–ª–∞
    const fileUrl = `/uploads/${fileName}`
    console.log("üîó URL —Ñ–∞–π–ª–∞:", fileUrl)

               return NextResponse.json({
             success: true,
             url: fileUrl,
             fileName: fileName,
             size: file.size,
             type: file.type
           }, {
             headers: {
               'Access-Control-Allow-Origin': '*',
               'Access-Control-Allow-Methods': 'POST, OPTIONS',
               'Access-Control-Allow-Headers': 'Content-Type',
               'Access-Control-Max-Age': '86400',
             },
           })

  } catch (error) {
    console.error("üí• –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞:", error)
    
               return NextResponse.json(
             { error: `–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}` },
             { 
               status: 500,
               headers: {
                 'Access-Control-Allow-Origin': '*',
                 'Access-Control-Allow-Methods': 'POST, OPTIONS',
                 'Access-Control-Allow-Headers': 'Content-Type',
                 'Access-Control-Max-Age': '86400',
               },
             }
           )
  }
}

