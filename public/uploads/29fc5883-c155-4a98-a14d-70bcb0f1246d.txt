import { auth } from "@/auth";

interface SidebarItemProps {
  label: string;
  href: string;
}

async function SidebarItem({ label, href }: SidebarItemProps) {
  const session = await auth();

  if (session?.user?.email !== "admin@example.com") {
    return null; // Не отображать пункт, если не админ
  }

  return (
    <li>
      <a href={href}>{label}</a>
    </li>
  );
}

export default SidebarItem;

// Sidebar.tsx
import SidebarItem from "./SidebarItem";

function Sidebar() {
  return (
    <aside>
      <ul>
        <li>
          <a href="/">Главная</a>
        </li>
        <SidebarItem label="Админ" href="/admin" />
        <li>
          <a href="/profile">Профиль</a>
        </li>
      </ul>
    </aside>
  );
}

export default Sidebar;

// @/auth.ts
async authorize(credentials) {
  // ...
  return {
    id: user.userId.toString(),
    name: user.username,
    email: user.username,
    image: user.profilePictureUrl || null,
    role: user.role, // Добавляем роль
  };
}

// SidebarItem.tsx
async function SidebarItem({ label, href }: SidebarItemProps) {
  const session = await auth();

  if (session?.user?.role !== "admin") {
    return null; // Не отображать пункт, если не админ
  }

  return (
    <li>
      <a href={href}>{label}</a>
    </li>
  );
}
